.script:
  script:
    - |
      julia --project=@. -e '
        using Pkg
        Pkg.build()
        Pkg.test(coverage=true)'
  rules:
    - if: $CI_COMMIT_BRANCH =~ /doc/
      when: never
    - when: always

.coverage:
  coverage: /Test coverage (\d+\.\d+%)/
  after_script:
    - |
      julia -e '
        using Pkg
        Pkg.add("Coverage")
        using Coverage
        c, t = get_summary(process_folder())
        using Printf
        @printf "Test coverage %.2f%%\n" 100c / t'

Julia 1.6:
  interruptible: true
  image: julia:1.6
  extends:
    - .script
    - .coverage

pages:
  interruptible: true
  image: julia:1.6
  stage: deploy
  before_script:
    # workaround for https://github.com/JuliaDocs/Documenter.jl/issues/686
    - apt-get -qq update; apt-get -y install git
  script:
    - |
      julia --project=docs -e '
        using Pkg
        Pkg.develop(PackageSpec(path=pwd()))
        Pkg.instantiate()
        using Documenter: doctest
        using DifferentialRiccatiEquations
        doctest(DifferentialRiccatiEquations)
        include("docs/make.jl")'
    - mkdir -p public
    - mv docs/build public/dev
  artifacts:
    paths:
      - public
  rules:
    # merge request pipeline:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
    # skip branch pipeline, if there happens to be a MR pipeline:
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH =~ /doc/
